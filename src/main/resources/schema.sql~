/*
-- Initialize schema
*/
DROP SCHEMA IF EXISTS STOCK_SCHEMA CASCADE;
CREATE SCHEMA STOCK_SCHEMA;


-- Create tables
CREATE TABLE STOCK_SCHEMA.customer
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255)        NOT NULL,
    role     VARCHAR(255)        NOT NULL
);

CREATE TABLE STOCK_SCHEMA.asset (
                                    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    asset_name VARCHAR(255),
                                    size BIGINT,
                                    usable_size BIGINT,
                                    customer_id BIGINT,
                                    CONSTRAINT fk_asset_customer FOREIGN KEY (customer_id) REFERENCES STOCK_SCHEMA.customer(id)
);

CREATE TABLE STOCK_SCHEMA.orders (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     size BIGINT,
                                     price DECIMAL(19, 2),
                                     order_side VARCHAR(255),
                                     status VARCHAR(255),
                                     create_date TIMESTAMP,
                                     customer_id BIGINT,
                                     asset_id BIGINT,
                                     CONSTRAINT fk_orders_customer FOREIGN KEY (customer_id) REFERENCES STOCK_SCHEMA.customer(id),
                                     CONSTRAINT fk_orders_asset FOREIGN KEY (asset_id) REFERENCES STOCK_SCHEMA.asset(id)
);

-- Indexler
CREATE INDEX idx_orders_asset_id ON STOCK_SCHEMA.orders(asset_id);
CREATE INDEX idx_orders_customer_id ON STOCK_SCHEMA.orders(customer_id);